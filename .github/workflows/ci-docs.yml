name: Documentation
env:
  JULIA_CI: "true"
  PYTHONHASHSEED: "0"

on:
  push:
    branches:
      - main
      - epic/*
      - "[0-9]+.[0-9]+.x"
  pull_request:
    branches:
      - main
      - epic/*
      - "[0-9]+.[0-9]+.x"
  workflow_dispatch:

jobs:
  html-fast:
    name: Build HTML (fast)
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: |
            ${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-${{ hashFiles('.constraints/py3.*.txt', 'setup.cfg') }}
          path: |
            ~/.cache/pip/
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -c .constraints/py3.8.txt .[doc] tox
      - run: tox -e doc
      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: html
          path: docs/_build/html

  pdf-fast:
    name: Build PDF (fast)
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: |
            ${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-${{ hashFiles('.constraints/py3.*.txt', 'setup.cfg') }}
          path: |
            ~/.cache/pip/
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install Python and APT dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -c .constraints/py3.8.txt .[doc] tox
          sudo apt install -y inkscape latexmk make texlive-fonts-extra xindy
      - run: tox -e pdf
      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: latex
          path: docs/_build/latex

  documentation:
    name: Run notebooks and build documentation
    needs:
      - html-fast
      - pdf-fast
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: |
            ${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-${{ hashFiles('.constraints/py3.*.txt', 'data/**', 'julia/Manifest.toml', 'julia/Project.toml', 'setup.cfg', 'src/**') }}
          path: |
            ./docs/_build/.jupyter_cache
            ./docs/_images
            ./docs/_static/export
            ./docs/_static/images
            ./docs/appendix/export
            ./julia-*/
            ~/.cache/pip/
            ~/.julia/
            ~/.sympy-cache*/
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install Python and APT dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -c .constraints/py3.8.txt .[doc] tox
          sudo apt-get -y install cm-super dvipng inkscape latexmk texlive-fonts-extra texlive-latex-extra texlive-xetex xindy
      - name: Install Julia
        run: |
          version=$(sed -n '3p' julia/Manifest.toml)
          version=${version:17:-1}
          major_version=${version:0:-2}
          filename=julia-${version}-linux-x86_64.tar.gz
          if [ ! -d julia-${version} ]; then
            wget -q https://julialang-s3.julialang.org/bin/linux/x64/${major_version}/${filename}
            tar xzf ${filename}
          fi
          sudo ln -s $(pwd)/julia-${version}/bin/julia /usr/local/bin/julia
          julia --version
          julia --project=./julia -e 'import Pkg; Pkg.instantiate()'
      - run: tox -e pdfnb
      - run: tox -e docnb
        env:
          EXECUTE_PLUTO: "YES"
      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: html
          path: |
            docs/_build/html
            docs/_build/latex

  gh-pages:
    name: Upload to GitHub Pages
    needs: documentation
    if: >
      github.repository == 'ComPWA/polarimetry' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}
      - name: Remove all existing files
        run: find . ! -regex '^./.git\(/.*\)?' -delete | true
      - uses: actions/download-artifact@v3
        with:
          name: html
          path: .
      - name: Commit to gh-pages orphan branch
        run: |
          git checkout --orphan gh-pages
          git add -A
          git config --global user.name "GitHub"
          git config --global user.email "noreply@github.com"
          git status -s
          git commit -m "Upload documentation build files"
      - name: Force-push changes
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }}
          git push origin gh-pages --force
