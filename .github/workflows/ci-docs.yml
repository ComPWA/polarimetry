env:
  FORCE_COLOR: "1"
  JAX_COMPILATION_CACHE_DIR: ~/.cache/jax
  JULIA_CI: "true"
  UV_PYTHON_PREFERENCE: only-managed

on:
  workflow_call:
    inputs:
      specific-pip-packages:
        required: false
        type: string

jobs:
  fast-html:
    if: inputs.specific-pip-packages == ''
    name: Build HTML (fast)
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Build documentation without running notebooks
        run: >-
          uv run \
            --group doc \
            --no-dev \
            --with tox-uv \
            tox -e doc
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: html
          path: docs/_build/html

  fast-pdf:
    if: inputs.specific-pip-packages == ''
    name: Build PDF (fast)
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y inkscape latexmk make texlive-fonts-extra texlive-xetex xindy
          uv run \
            --group doc \
            --no-dev \
            --with tox-uv \
            tox -e pdf
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: latex-fast-pdf
          path: docs/_build/latex

  linkcheck:
    if: inputs.specific-pip-packages == ''
    name: Check external links
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Check external links with Sphinx linkcheck
        run: >-
          uv run \
            --group doc \
            --no-dev \
            --with tox-uv \
            tox -e linkcheck

  documentation:
    name: Run notebooks and build documentation
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.3
        with:
          cache: true
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y cm-super dvipng inkscape latexmk texlive-fonts-extra texlive-latex-extra texlive-xetex xindy
      - name: Fetch JAX cache
        uses: actions/cache@v4
        with:
          key: |
            jax-${{hashFiles('uv.lock', 'pyproject.toml')}}
          restore-keys: |
            jax-${{hashFiles('uv.lock', 'pyproject.toml')}}
            jax
          path: |
            ~/.cache/jax
      - name: Fetch Julia cache
        uses: actions/cache@v4
        with:
          key: |
            julia-${{hashFiles('julia/Manifest.toml')}}-${{hashFiles('**/*.jl')}}
          restore-keys: |
            julia-${{hashFiles('julia/Manifest.toml')}}
            julia
          path: |
            ./julia-*/
            ~/.julia/
      - uses: ComPWA/actions/cache-sympy@v2
      - name: Fetch Jupyter cache
        uses: actions/cache@v4
        with:
          key: |
            jupyter-cache-${{hashFiles('uv.lock', 'data/*.json', 'data/*.yaml', 'src/**/*.py')}}-${{hashFiles('docs/**')}}
          restore-keys: |
            jupyter-cache-${{hashFiles('uv.lock', 'data/*.json', 'data/*.yaml', 'src/**/*.py')}}
          path: |
            ./docs/_build/.jupyter_cache
      - name: Fetch output files
        uses: actions/cache@v4
        with:
          key: |
            output-files-${{hashFiles('uv.lock', 'data/*.json', 'data/*.yaml', 'src/**/*.py')}}-${{hashFiles('docs/**')}}
          restore-keys: |
            output-files-${{hashFiles('uv.lock', 'data/*.json', 'data/*.yaml', 'src/**/*.py')}}
            output-files
          path: |
            ./docs/_images
            ./docs/_static/export
            ./docs/_static/images
            ./docs/appendix/export
            ./docs/appendix/exported_intensity_model.py
      - name: Build PDF with notebook execution
        run: >-
          pixi run \
            uv run \
              --group doc \
              --group notebooks \
              --no-dev \
              --with tox-uv \
              tox -e pdfnb
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: latex
          path: docs/_build/latex
      - name: Build PDF with notebook execution
        env:
          EXECUTE_PLUTO: "YES"
        run: >-
          pixi run \
            uv run \
              --group doc \
              --group notebooks \
              --no-dev \
              --with tox-uv \
              tox -e docnb
      - uses: actions/upload-pages-artifact@v3
        if: always()
        with:
          path: docs/_build/html

  gh-pages:
    name: Upload to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: >-
      github.event_name == 'push' &&
      github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    needs:
      - documentation
      - linkcheck
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-24.04
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
